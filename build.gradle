plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.1"
    id("io.micronaut.aot") version "4.2.1"
    id("io.micronaut.openapi") version "4.2.1"
    id("checkstyle")
    id("jacoco")
}

version = "1.0"
group = "com.cyolo"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor:4.2.0")
    implementation("io.micronaut.validation:micronaut-validation:4.0.1")
    implementation("io.micronaut:micronaut-http-server:4.0.0")
    implementation("io.micronaut:micronaut-management:4.2.0")
    implementation ("org.projectlombok:lombok:1.18.30")
    implementation("io.projectreactor:reactor-core:3.5.6")
    implementation('io.micronaut.micrometer:micronaut-micrometer-core:4.8.2')
    implementation('io.micronaut.micrometer:micronaut-micrometer-registry-prometheus:4.8.2')
    annotationProcessor ("org.projectlombok:lombok:1.18.30")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor:2.5.1")
    implementation("io.micronaut.serde:micronaut-serde-jackson:2.5.1")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")
}


application {
    mainClass.set("${servicePackage}.WordsFrequencyEvaluatorApp")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

checkstyle {
    configFile = file("${rootProject.projectDir}/config/checkstyle/wfe-checkstyle.xml")
    checkstyleMain.source = "src/main/java"
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("${servicePackage}.*")
    }
    openapi {
        server(file("${openapiSpecPath}")) {
            apiPackageName = "${servicePackage}.controller"
            modelPackageName = "${servicePackage}.DTO"
            useReactive = false
            useAuth = false
        }
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = "CLASS"
            excludes = ["com.cyolo.words.frequency.evaluator.WordsFrequencyEvaluatorApp",
                        "com.cyolo.words.frequency.evaluator.controller.mapper.*",
                        "com.cyolo.words.frequency.evaluator.log.*",
                        "com.cyolo.words.frequency.evaluator.DTO.*",
                        "com.cyolo.words.frequency.evaluator.error.*",
                        "com.cyolo.words.frequency.evaluator.model.*"]
            limit {
                counter = "LINE"
                minimum = 0.8
            }
        }
    }
}
check.dependsOn(jacocoTestCoverageVerification)



